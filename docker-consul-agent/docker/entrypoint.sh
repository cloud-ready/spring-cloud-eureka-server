#!/usr/bin/env bash

set -e

COMMANDS=()
RECURSORS=()
while test $# -gt 0; do
    case "$1" in
    -recursor=*)
        recursor=`echo $1 | sed -e 's/^[^=]*=//g'`
        RECURSORS+=("${recursor}")
        shift
        ;;
    *)
        COMMANDS+=("$1")
        shift
        ;;
    esac
done

echo "CONSUL_RECURSORS: ${CONSUL_RECURSORS}"
# see: https://stackoverflow.com/questions/22691436/unable-to-add-element-to-array-in-bash
while read consul_recursor; do RECURSORS+=("${consul_recursor}"); done < <(echo "${CONSUL_RECURSORS}" | sed -n 1'p' | tr ',' '\n')
echo "COMMANDS: ${COMMANDS[@]}"
echo "RECURSORS: ${RECURSORS[@]}"

MOUNT_POINT_ETC_RESOLVE_CONF="/var/lib/host_etc_resolv.conf"

# test:
# uncomment 'MOUNT_POINT_ETC_RESOLVE_CONF="$(pwd)/resolv.conf"' for test
#MOUNT_POINT_ETC_RESOLVE_CONF="$(pwd)/resolv.conf"
#./entrypoint.sh -agent -bind=0.0.0.0 -client=127.0.0.1 -dns-port=53 -recursor=8.8.8.8 -recursor=1.2.3.4 -retry-join=127.0.0.1 -retry-interval=30s -retry-max=0 -ui=true
# or
#CONSUL_RECURSORS="1.2.3.4" ./entrypoint.sh -agent -bind=0.0.0.0 -client=127.0.0.1 -dns-port=53 -retry-join=127.0.0.1 -retry-interval=30s -retry-max=0 -ui=true

if [[ "${MOUNT_POINT_ETC_RESOLVE_CONF}" == "$(pwd)/resolv.conf" ]]; then IS_TEST="true"; fi
#while [ ! -f ${MOUNT_POINT_ETC_RESOLVE_CONF} ]; do
#    echo "host's /etc/resolv.conf not found at ${MOUNT_POINT_ETC_RESOLVE_CONF}."
#    sleep 5s
#done

NAMESERVERS=()
if [[ -f ${MOUNT_POINT_ETC_RESOLVE_CONF} ]]; then
    NAMESERVERS=($(cat ${MOUNT_POINT_ETC_RESOLVE_CONF} | grep -E 'nameserver[ ]+[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | awk '{print $2}' | grep -v '127.0.0.1'))
fi
echo "Found ${#NAMESERVERS[@]} nameservers, '${NAMESERVERS[@]}'"

# If no 'recursors' option given, try to determine automatically.
if [[ ${#RECURSORS[@]} -eq 0 ]] && [[ ${#NAMESERVERS[@]} -gt 0 ]]; then
    # Read host's /etc/resolv.conf to find out DNS servers to set consul's 'recursors' automatically.
    # Insert 127.0.0.1 at first position if possible (/etc/resolv.conf in OSX is not consulted for resolution).
    # To avoid loop, must exclude host itself from 'recursors' option, so we need to know host's ip-address.

    # auto detect host's ip-address in NAMESERVERS
    if [[ ${#NAMESERVERS[@]} -ge 2 ]] && [[ -z "${HOST_IPADDRESS}" ]]; then
        first=${NAMESERVERS[0]}
        second=${NAMESERVERS[1]}
        #echo "first: '${first}', second: '${second}'"

        if [[ $(echo ${first} | awk -F'.' '{print $1"."$2"."$3}') == $(echo ${second} | awk -F'.' '{print $1"."$2"."$3}') ]]; then
            echo "first 3 parts of ip-address matched, remove ${first} from nameserver list."
            RECURSORS=("${NAMESERVERS[@]:1}")
        elif [[ $(echo ${first} | awk -F'.' '{print $1"."$2}') == $(echo ${second} | awk -F'.' '{print $1"."$2}') ]]; then
            echo "first 2 parts of ip-address matched, remove ${first} from nameserver list."
            RECURSORS=("${NAMESERVERS[@]:1}")
        fi
    else
        for nameserver in ${NAMESERVERS[@]}; do RECURSORS+=("${nameserver}"); done
    fi

    echo "Found ${#RECURSORS[@]} nameservers for 'recursors' option, '${RECURSORS[@]}'"
fi

for recursor in ${RECURSORS[@]}; do
    # exclude host's ip-address from 'recursors' option
    if [[ "${recursor}" != "${HOST_IPADDRESS}" ]]; then COMMANDS+=("-recursor=${recursor}"); fi
done
echo "COMMANDS: ${COMMANDS[@]}"

# insert 'nameserver 127.0.0.1' into host's /etc/resolv.conf at first position
function insert_nameserver() {
    if [[ -f ${MOUNT_POINT_ETC_RESOLVE_CONF} ]] && [[ ${#NAMESERVERS[@]} -gt 0 ]]; then
        echo "=====[ insert_nameserver ]====="
        if ! grep -q 'macOS Notice' ${MOUNT_POINT_ETC_RESOLVE_CONF}; then
            # if not OSX
            if grep -q '# Generated by dhcpcd from' ${MOUNT_POINT_ETC_RESOLVE_CONF}; then echo 'In Docker for Mac VM'; fi

            if ! grep -q 'nameserver 127.0.0.1' ${MOUNT_POINT_ETC_RESOLVE_CONF} || [[ "$(grep -E "^nameserver .+$" ${MOUNT_POINT_ETC_RESOLVE_CONF} | head -n1)" != "nameserver 127.0.0.1" ]]; then
                echo "insert 'nameserver 127.0.0.1' into ${MOUNT_POINT_ETC_RESOLVE_CONF} before '${NAMESERVERS[0]}'"

                #echo 'nameserver 127.0.0.1' > /tmp/nameserver
                # see: https://unix.stackexchange.com/questions/32908/how-to-insert-the-content-of-a-file-into-another-file-before-a-pattern-marker
                #sed -n -e "/${NAMESERVERS[0]}/r /tmp/nameserver" -e 1x -e '2,${x;p}' -e '${x;p}' ${MOUNT_POINT_ETC_RESOLVE_CONF} > /tmp/resolv.conf

                echo 'nameserver 127.0.0.1' > /tmp/resolv.conf
                for nameserver in ${NAMESERVERS[@]}; do echo "nameserver ${nameserver}" >> /tmp/resolv.conf; done

                cat /tmp/resolv.conf > ${MOUNT_POINT_ETC_RESOLVE_CONF}

                echo result ${MOUNT_POINT_ETC_RESOLVE_CONF}
                cat ${MOUNT_POINT_ETC_RESOLVE_CONF}
            else
                echo "found 'nameserver 127.0.0.1' in ${MOUNT_POINT_ETC_RESOLVE_CONF} before '${NAMESERVERS[0]}'"
            fi
        else
            echo "/etc/resolv.conf in OSX is not consulted for resolution"
        fi
    else
        echo "=====[ skip insert_nameserver ]====="
    fi
}


if [[ "${1:0:1}" != '/' ]]; then
    insert_nameserver

    if [[ "${IS_TEST}" != "true" ]]; then
        while sleep 1m; do insert_nameserver; done &
        # original entry point: /usr/local/bin/docker-entrypoint.sh
        docker-entrypoint.sh ${COMMANDS[@]}
        kill %1
    fi
else
    exec "$@"
fi
